version: "3.8"

services:
  gateway:
    build: ./Gateway
    container_name: gateway-service
    ports:
      - "8081:8081"
    depends_on:
      - filestorage
      - analysis
    networks:
      - app-net

  filestorage-db:
    image: postgres:15-alpine
    container_name: file_storage_db
    environment:
      POSTGRES_DB: file_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - filestorage_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  filestorage:
    build: ./FileStorage
    container_name: filestorage-service
    ports:
      - "8083:8083"
      - "9091:9091"
    depends_on:
      filestorage-db:
        condition: service_healthy
    networks:
      - app-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://filestorage-db:5432/file_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

  analysis-db:
    image: postgres:15-alpine
    container_name: analysis_db
    environment:
      POSTGRES_DB: analysis_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - analysis_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  analysis:
    build: ./Analysis
    container_name: analysis-service
    ports:
      - "8082:8082"
      - "9092:9092"
    depends_on:
      analysis-db:
        condition: service_healthy
    networks:
      - app-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://analysis-db:5432/analysis_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

networks:
  app-net:
    driver: bridge

volumes:
  filestorage_data:
  analysis_data: